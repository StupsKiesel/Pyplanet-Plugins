
#Include "TextLib" as TL
#Include "AnimLib" as AL

main() {
  declare Toolbar_Tooltip_Quad <=> (Page.GetFirstChild("player_toolbar_bar_tooltip_quad") as CMlQuad);
  declare Toolbar_Tooltip_Label <=> (Page.GetFirstChild("player_toolbar_bar_tooltip_text") as CMlLabel);

  declare Text[Text] Tooltips = [
    "player_toolbar_bar_button_list" => "View list of Server Maps",
	"player_toolbar_bar_button_mf" => "View list of Map Folders",
    "player_toolbar_bar_button_jb" => "View the Juke Box List",
    "player_toolbar_bar_button_skip" => "Vote for a skip map",
	"player_toolbar_bar_button_extend" => "Vote for Extending the Time Limit",
	
	"player_toolbar_bar_button_players" => "View list of Players",
	"player_toolbar_bar_button_topdons" => "View list of top Donators",
	"player_toolbar_bar_button_topsums" => "View Server Rank List",
	"player_toolbar_bar_button_mxinfo" => "CHAT: info about curent map",
	"player_toolbar_bar_button_help" => "CHAT: list of avaliable commands"

  ];


  while(True) {
    foreach (Event in PendingEvents) {
      if (Event.Type == CMlEvent::Type::MouseOver && TL::Find("player_toolbar_bar_button", Event.ControlId, True, True)) {
        Toolbar_Tooltip_Label.SetText(Tooltips[Event.ControlId]);
        Toolbar_Tooltip_Label.Show();
        Toolbar_Tooltip_Quad.Show();
      }
      if (Event.Type == CMlEvent::Type::MouseOut && TL::Find("player_toolbar_bar_button", Event.ControlId, True, True)) {
        Toolbar_Tooltip_Label.Hide();
        Toolbar_Tooltip_Quad.Hide();
      }
    }
    yield;
  }
}
